// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModShark.Models;

namespace ModShark.Migrations
{
    [DbContext(typeof(ModSharkContext))]
    [Migration("20190303134945_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("ModShark.Models.RedditUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Username")
                        .HasName("AlternateKey_Username");

                    b.ToTable("RedditUsers");
                });

            modelBuilder.Entity("ModShark.Models.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RedditUserId");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SettingsProfileId");

                    b.Property<string>("SettingsProfileName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RedditUserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("ModShark.Models.UserSetting", b =>
                {
                    b.HasOne("ModShark.Models.RedditUser", "RedditUser")
                        .WithMany("UserSettings")
                        .HasForeignKey("RedditUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
